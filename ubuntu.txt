##as root
apt update
apt upgrade

apt install python3-pip
pip3 install virtualenv
apt install postgresql postgresql-contrib -y

##disable peering connection (local postgres user only)
vi /etc/postgresql/12/main/postgresql.conf
listen_addresses = '*'

vi pg_hba.conf
local   all             postgres                                md5
local   all             all                                     md5
host    all             all             0.0.0.0/0            md5
host    all             all             ::/0                 md5

systemctl restart postgresql

##add user to run api, with sudo rights
adduser fastapi
usermod -aG sudo fastapi

su - fastapi

##set up app
cd ~
mkdir app
cd app

virtualenv venv
source venv/bin/activate

mkdir src
cd src
git clone https://github.com/Benedikt-Fischer/fastapi.git .
sudo apt install libpq-dev
pip install -r requirements.txt

uvicorn app.main:app

##to always load env variables for user
cd
vi .env
##paste the .env stuff there like in dev .env
vi .profile
set -o allexport; source /home/fastapi/.env; set +o allexport

printenv

##set up system service
vi /etc/systemd/system/api.service
[Unit]
Description=demo fastapi application
After=network.target

[Service]
User=fastapi
Group=fastapi
WorkingDirectory=/home/fastapi/app/src/
Environment="PATH=/home/fastapi/app/venv/bin"
EnvironmentFile=/home/fastapi/.env
ExecStart=/home/fastapi/app/venv/bin/gunicorn -w 4 -k uvicorn.workers.UvicornWorker app.main:app --bind 0.0.0.0:8000

[Install]
WantedBy=multi-user.target

##install and configure nginx (for ssl termination)
sudo apt install nginx
sudo systemctl enable nginx

vi /etc/nginx/sites-available/default
server {
        listen 80;
        listen [::]:80;

        server_name _;

        location / {
                proxy_pass http://localhost:8000;
                proxy_http_version 1.1;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $http_host;
                proxy_set_header X-NginX-Proxy true;
                proxy_redirect off;
        }
}

sudo systemctl daemon-reload
sudo systemctl restart nginx

##configure firewall
ufw allow <port>
ufw enable
ufw status